local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Jext1/Love-Hub/main/loveRemix.txt')))()local Window = OrionLib:MakeWindow({Name = "Love Hub | MM2", HidePremium = false, IntroText = "Love Hub", IntroIcon = "rbxassetid://17588262815"})--Tabslocal Tab1 = Window:MakeTab({	Name = "Visual",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})local Tab2 = Window:MakeTab({	Name = "Misc",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})local TabMurderer = Window:MakeTab({	Name = "Murderer",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})local TabSheriff = Window:MakeTab({	Name = "Sherrif",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})local Tab3 = Window:MakeTab({	Name = "Farm",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})local Tab4 = Window:MakeTab({	Name = "Player",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})local Tab5 = Window:MakeTab({	Name = "Teleport",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})local Tab6 = Window:MakeTab({	Name = "Credits",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})local Tab7 = Window:MakeTab({	Name = "Kown Bugs!",	Icon = "rbxassetid://4483345998",	PremiumOnly = false})-- Visual Tab (Tab1)local toggleState = falselocal runningCoroutine = nillocal espEnabled = falselocal refreshConnection = nillocal function murderer(player)	return player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife"))endlocal function sheriff(player)	return player.Backpack:FindFirstChild("Gun") or (player.Character and player.Character:FindFirstChild("Gun"))endlocal function createHighlight(player)	if player.Character then		local color = Color3.new(1, 1, 1) -- Default color (white)		if murderer(player) then			color = Color3.new(1, 0, 0) -- Murderer color (red)		elseif sheriff(player) then			color = Color3.new(0, 0, 1) -- Sheriff color (blue)		end		local highlight = player.Character:FindFirstChild("ESPHighlight")		if not highlight then			highlight = Instance.new("Highlight")			highlight.Name = "ESPHighlight"			highlight.Parent = player.Character			highlight.Adornee = player.Character		end		highlight.FillColor = color		highlight.OutlineColor = Color3.new(1, 1, 1)		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop	endendlocal function removeHighlight(player)	if player.Character then		local highlight = player.Character:FindFirstChild("ESPHighlight")		if highlight then			highlight:Destroy()		end	endendlocal function updateESP()	for _, player in pairs(game.Players:GetPlayers()) do		if espEnabled then			createHighlight(player)		else			removeHighlight(player)		end	endend-- Monitor new players joininglocal playerAddedConnection = game.Players.PlayerAdded:Connect(function(newPlayer)	newPlayer.CharacterAdded:Connect(function()		if espEnabled then			wait(1)  -- Wait for the character to load			createHighlight(newPlayer)		end	end)end)Tab1:AddToggle({	Name = "ESP",	Default = false,	Callback = function(Value)		espEnabled = Value		if espEnabled then			refreshConnection = game:GetService("RunService").RenderStepped:Connect(updateESP)		else			if refreshConnection then				refreshConnection:Disconnect()				refreshConnection = nil			end			for _, player in pairs(game.Players:GetPlayers()) do				removeHighlight(player)			end		end		-- Handle existing players		for _, player in pairs(game.Players:GetPlayers()) do			if player.Character then				if espEnabled then					createHighlight(player)				else					removeHighlight(player)				end			end			player.CharacterAdded:Connect(function()				if espEnabled then					wait(1) 					createHighlight(player)				end			end)		end	end    })Tab1:AddToggle({	Name = "ESP Names",	Default = false,	Callback = function(Value)		print(Value)		local function createNameTag(player)			if player.Character and not player.Character:FindFirstChild("NameTag") then				local billboardGui = Instance.new("BillboardGui")				billboardGui.Name = "NameTag"				billboardGui.Adornee = player.Character:FindFirstChild("Head")				billboardGui.Size = UDim2.new(0, 100, 0, 50)				billboardGui.StudsOffset = Vector3.new(0, 2, 0)				billboardGui.AlwaysOnTop = true				local textLabel = Instance.new("TextLabel")				textLabel.Parent = billboardGui				textLabel.Size = UDim2.new(1, 0, 1, 0)				textLabel.BackgroundTransparency = 1				textLabel.Text = player.Name				textLabel.TextColor3 = Color3.new(1, 1, 1)				textLabel.TextStrokeTransparency = 0				textLabel.Font = Enum.Font.SourceSansBold				textLabel.TextSize = 20				billboardGui.Parent = player.Character			end		end		local function removeNameTag(player)			if player.Character then				local nameTag = player.Character:FindFirstChild("NameTag")				if nameTag then					nameTag:Destroy()				end			end		end		local function updateESPNames()			for _, player in pairs(game.Players:GetPlayers()) do				if Value then					createNameTag(player)				else					removeNameTag(player)				end			end		end		-- Monitor new players joining		game.Players.PlayerAdded:Connect(function(newPlayer)			newPlayer.CharacterAdded:Connect(function()				if Value then					wait(1)  -- Wait for the character to load					createNameTag(newPlayer)				end			end)		end)		-- Handle existing players		for _, player in pairs(game.Players:GetPlayers()) do			if player.Character then				if Value then					createNameTag(player)				else					removeNameTag(player)				end			end			player.CharacterAdded:Connect(function()				if Value then					wait(1)  -- Wait for the character to load					createNameTag(player)				end			end)		end	end})-- Set the default state of Gun ESP to truegetgenv().GunESP = falseTab1:AddToggle({	Name = "Gun ESP",	Default = false,	Callback = function(Value)		getgenv().GunESP = Value	end})-- Assuming GunHighlight and GunHandleAdornment are predefined somewhere in your scriptlocal RunService = game:GetService("RunService")RunService.RenderStepped:Connect(function()	pcall(function()		if getgenv().GunESP then			local gundrop = workspace:FindFirstChild("GunDrop")			if gundrop then				GunHighlight.Adornee = gundrop				GunHandleAdornment.Adornee = gundrop				GunHandleAdornment.Size = gundrop.Size + Vector3.new(0.05, 0.05, 0.05)				GunHighlight.Enabled = true				GunHandleAdornment.Visible = true			else				GunHighlight.Enabled = false				GunHandleAdornment.Visible = false			end		else			GunHighlight.Enabled = false			GunHandleAdornment.Visible = false		end	end)end)-- Ensure GunHighlight and GunHandleAdornment are defined and configuredGunHighlight = GunHighlight or Instance.new("Highlight") -- Replace with actual initialization if necessaryGunHandleAdornment = GunHandleAdornment or Instance.new("BoxHandleAdornment") -- Replace with actual initialization if necessary-- Add GunHighlight and GunHandleAdornment to the appropriate parent (e.g., workspace)GunHighlight.Parent = workspaceGunHandleAdornment.Parent = workspace-- Define the X-ray functionsfunction XrayOn(obj)	for _,v in pairs(obj:GetChildren()) do		if (v:IsA("BasePart")) and not v.Parent:FindFirstChild("Humanoid") then			v.LocalTransparencyModifier = 0.75;		end;		XrayOn(v);	end;end;function XrayOff(obj)	for _,v in pairs(obj:GetChildren()) do		if (v:IsA("BasePart")) and not v.Parent:FindFirstChild("Humanoid") then			v.LocalTransparencyModifier = 0;		end;		XrayOff(v);	end;end;-- Create the toggle buttonTab1:AddToggle({	Name = "Xray",	Default = false,	Callback = function(Value)		-- Update the global Xray state		getgenv().Xray = Value;		-- Call the appropriate function based on the toggle state		if getgenv().Xray then			XrayOn(game.Workspace);		else			XrayOff(game.Workspace);		end;		-- Print the current state (for debugging purposes)		print(Value)	end    })-- Misc Tab (Tab2)Tab2:AddLabel("OP")local GunLabel = Tab2:AddLabel("Gun Not Dropped")coroutine.wrap(function()	while wait(1) do		if workspace:FindFirstChild("GunDrop") then			GunLabel:Set("Gun Dropped")			GunLabel.TextColor3 = Color3.fromRGB(0, 170, 126)		else			GunLabel:Set("Gun Not Dropped")			GunLabel.TextColor3 = Color3.fromRGB(254, 86, 86)		end	endend)()Tab2:AddButton({	Name = "Get Gun",	Callback = function()		for i,v in pairs(game:GetDescendants()) do			if v.Name == 'GunDrop' then				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame				wait(2.9)			end		end	end})Tab2:AddButton({	Name = "God Mode",	Callback = function()		local player = game.Players.LocalPlayer		local character = player.Character		if character and character:FindFirstChild("Humanoid") then			-- Clone and store accessories			local accessories = {}			for _, accessory in pairs(character.Humanoid:GetAccessories()) do				table.insert(accessories, accessory:Clone())			end			-- Rename the original Humanoid			character.Humanoid.Name = "boop"			-- Clone the renamed Humanoid			local humanoidClone = character["boop"]:Clone()			humanoidClone.Parent = character			humanoidClone.Name = "Humanoid"			-- Wait for changes to register			wait(0.1)			-- Destroy the original renamed Humanoid			character["boop"]:Destroy()			-- Set the CameraSubject to the new Humanoid			workspace.CurrentCamera.CameraSubject = character.Humanoid			-- Add the cloned accessories back to the new Humanoid			for _, accessory in pairs(accessories) do				character.Humanoid:AddAccessory(accessory)			end			-- Reset the Animate script			if character:FindFirstChild("Animate") then				character.Animate.Disabled = true				wait(0.1)				character.Animate.Disabled = false			end		end	end    })Tab2:AddLabel("Fun")local allPlayers = game.Players:GetPlayers()local function exposeMurderer()	for _, player in pairs(allPlayers) do		local backpack = player:FindFirstChild("Backpack")		if backpack and backpack:FindFirstChild("Knife") then			local args = {				[1] = player.Name .. ": Has The Knife",				[2] = "normalchat"			}			game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest"):FireServer(unpack(args))		end	endendlocal function exposeSheriff()	for _, player in pairs(allPlayers) do		local backpack = player:FindFirstChild("Backpack")		if backpack and backpack:FindFirstChild("Gun") then			local args = {				[1] = player.Name .. ": Has The Gun",				[2] = "normalchat"			}			game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest"):FireServer(unpack(args))		end	endendTab2:AddButton({	Name = "Expose Murderer",	Callback = function()		exposeMurderer()	end    })Tab2:AddButton({	Name = "Expose Sheriff",	Callback = function()		exposeSheriff()	end    })-- Muderer Tab (TabMurderer)TabMurderer:AddButton({	Name = "Kill All (Glitchy)",	Callback = function()		for i, Victim in pairs(game.Players:GetPlayers()) do			if Victim.Name ~= game.Players.LocalPlayer.Name then				repeat wait() 					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Victim.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)					wait(0.3) -- Adding a short delay for better performance				until Victim.Character.Humanoid.Health <= 0			end		end	end})-- Sheriff Tab (TabSheriff)-- Function to get the murdererlocal function GetMurderer()	for _, Player in pairs(game.Players:GetPlayers()) do		local Plrback = Player:FindFirstChild("Backpack")		local PlrChar = Player.Character		if (Plrback and Plrback:FindFirstChild("Knife")) or (PlrChar and PlrChar:FindFirstChild("Knife")) then			return Player.Name		end	end	return nilend-- Add Slider to TabSheriffTabSheriff:AddSlider({	Name = "Range",	Min = 0,	Max = 100,	Default = 30,	Color = Color3.fromRGB(255, 255, 255),	Increment = 1,	Callback = function(Value)		getgenv().Accuracy = Value	end})-- Add Toggle to TabSheriffTabSheriff:AddToggle({	Name = "Aim Bot",	Default = false,	Callback = function(Value)		getgenv().Aimbot = Value	end})-- Get the murdererlocal Murderer = GetMurderer()-- Hook the metamethodOldHooks = hookmetamethod(game, "__namecall", function(self, ...)	local args = {...}	if not checkcaller() then		if typeof(self) == "Instance" and self.Name == "ShootGun" and getnamecallmethod() == "InvokeServer" then			if getgenv().Aimbot and getgenv().Accuracy then				if Murderer then					local PlrM = game:GetService("Players"):FindFirstChild(Murderer)					if PlrM and PlrM.Character and PlrM.Character.PrimaryPart then						local PP = PlrM.Character.PrimaryPart						local RootPart = PlrM.Character:FindFirstChild("HumanoidRootPart")						if PP then							args[2] = PP.Position + (PP.AssemblyLinearVelocity * Vector3.new(getgenv().Accuracy / 200, 0, getgenv().Accuracy / 200))						elseif RootPart then							args[2] = RootPart.Position + (RootPart.AssemblyLinearVelocity * Vector3.new(getgenv().Accuracy / 200, 0, getgenv().Accuracy / 200))						end					end				end			end		end	end	return OldHooks(self, unpack(args))end)-- Farm Tab (Tab3)-- Create the toggle for "Gold Farm!"Tab3:AddToggle({	Name = "Gold Farm!",	Default = false,	Callback = function(Value)		-- Set the global variable based on the toggle value		getgenv().Auto_Farm_Coins = Valuelocal Player = game.Players.LocalPlayer		spawn(function()			while getgenv().Auto_Farm_Coins do				task.wait()				pcall(function()					for _, GetCoin in pairs(workspace:GetChildren()) do						if GetCoin:FindFirstChild("CoinContainer") then							local plrRP = Player.Character.HumanoidRootPart							plrRP.CFrame = GetCoin:FindFirstChild("CoinContainer")["Coin_Server"].CFrame						end					end				end)			end		end)	end})-- Player Tab (Tab4)local walkSpeedValue = 16 -- Default walk speedlocal jumpPowerValue = 50 -- Default jump power-- Function to set the walk speed of the player's characterlocal function setWalkSpeed(character, speed)	if character and character:FindFirstChildOfClass("Humanoid") then		character:FindFirstChildOfClass("Humanoid").WalkSpeed = speed	else		character:WaitForChild("Humanoid").WalkSpeed = speed	endend-- Function to set the jump power of the player's characterlocal function setJumpPower(character, power)	if character and character:FindFirstChildOfClass("Humanoid") then		character:FindFirstChildOfClass("Humanoid").JumpPower = power	else		character:WaitForChild("Humanoid").JumpPower = power	endend-- Event listener for when the player's character respawnsgame.Players.LocalPlayer.CharacterAdded:Connect(function(character)	-- Delay setting the walk speed and jump power to ensure the character is fully loaded	character:WaitForChild("Humanoid")	setWalkSpeed(character, walkSpeedValue)	setJumpPower(character, jumpPowerValue)end)-- Add slider for walk speedTab4:AddSlider({	Name = "Walk Speed",	Min = 16,	Max = 100,	Default = 16,	Color = Color3.fromRGB(255, 255, 255),	Increment = 1,	ValueName = "Walk Speed",	Callback = function(Value)		walkSpeedValue = Value		setWalkSpeed(game.Players.LocalPlayer.Character, walkSpeedValue)	end    })Tab4:AddLabel("Default Speed Is 16")-- Add slider for jump powerTab4:AddSlider({	Name = "Jump Power",	Min = 50,	Max = 500,	Default = 50,	Color = Color3.fromRGB(255, 255, 255),	Increment = 1,	ValueName = "Jump Power",	Callback = function(Value)		jumpPowerValue = Value		setJumpPower(game.Players.LocalPlayer.Character, jumpPowerValue)	end    })-- Set the initial walk speed and jump power when the script first runsif game.Players.LocalPlayer.Character then	setWalkSpeed(game.Players.LocalPlayer.Character, walkSpeedValue)	setJumpPower(game.Players.LocalPlayer.Character, jumpPowerValue)endTab4:AddLabel("Default Jump Power Is 50")-- Initialize the InfiniteJump variablelocal InfiniteJump = false-- Function to handle the toggleTab4:AddToggle({	Name = "Inf Jump",	Default = false,	Callback = function(Value)		InfiniteJump = Value		print("Infinite Jump is now", InfiniteJump)	end    })-- Infinite jump scriptgame:GetService("UserInputService").JumpRequest:Connect(function()	if InfiniteJump == true then		local player = game:GetService("Players").LocalPlayer		if player and player.Character then			local humanoid = player.Character:FindFirstChildOfClass("Humanoid")			if humanoid then				humanoid:ChangeState("Jumping")			end		end	endend)--Nocliplocal Plr = game.Players.LocalPlayerlocal Clipon = falselocal Steppedlocal function toggleNoClip(Value)    Clipon = Value        if Clipon then        Stepped = game:GetService("RunService").Stepped:Connect(function()            for _, b in pairs(game.Workspace:GetChildren()) do                if b.Name == Plr.Name then                    for _, v in pairs(b:GetChildren()) do                        if v:IsA("BasePart") then                            v.CanCollide = false                        end                    end                end            end        end)    else        if Stepped then            Stepped:Disconnect()        end        -- Set CanCollide back to true when disabling no-clip        for _, b in pairs(game.Workspace:GetChildren()) do            if b.Name == Plr.Name then                for _, v in pairs(b:GetChildren()) do                    if v:IsA("BasePart") then                        v.CanCollide = true                    end                end            end        end    endendTab4:AddToggle({    Name = "No-Clip",    Default = false,    Callback = function(Value)        toggleNoClip(Value)    end    })-- Teleport Tab (Tab5)local TeleportDict = {	["Lobby"] = CFrame.new(Vector3.new(-108.5, 145, 0.6)),	-- We'll dynamically obtain the coordinates for "Map" below}local TeleportTable = {}for i, v in pairs(TeleportDict) do	table.insert(TeleportTable, i)endTab5:AddButton({	Name = "Lobby",	Callback = function()		local player = game.Players.LocalPlayer		if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then			player.Character.HumanoidRootPart.CFrame = TeleportDict["Lobby"]			print("Teleported to Lobby")		end	end    })-- Credits Tab (Tab6)Tab6:AddParagraph("Credits","Love Hub Team!")Tab6:AddButton({	Name = "Discord",	Callback = function()		setclipboard("https://scriptblox.com/u/nescoroco") 	end    })-- Kown Bugs (Tab7)Tab7:AddLabel("There Is Bug Where You Can Not Turn Off The Esp")OrionLib:Init()--Coin Farm--Exp Farm